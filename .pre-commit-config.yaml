# 🚨 ========= COPILOTO/CURSOR: PRE-COMMIT HOOKS ========= 🚨
#
# 🔒 SEGURIDAD PARA VPS:
#    ✅ detect-private-key: Evitar claves SSH/SSL hardcodeadas
#    ✅ check-json/yaml/toml: Validar archivos de configuración
#    ✅ check-case-conflict: Problemas Linux/Windows
#    ❌ NO AWS hooks - solo VPS
#
# 🧪 CALIDAD AUTOMÁTICA:
#    ✅ Tests, linting, formateo antes de cada commit
#    ✅ Análisis de deuda técnica automático
#    ✅ Validaciones de archivos y sintaxis
#
# 📚 REFERENCIA: /RULES.md sección "🧠 REGLAS PARA COPILOTO/CURSOR"
# 
# ================================================================
# Ejecutar: pre-commit install
# Uso: pre-commit run --all-files

repos:
  # ======================================
  # 🔒 SEGURIDAD VPS Y VALIDACIONES
  # ======================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # 📁 Validación de archivos
      - id: check-json
      - id: check-yaml
      - id: check-toml
      - id: check-xml
      
      # 🔒 Seguridad VPS/desarrollo  
      - id: detect-private-key      # 🚫 Evitar claves SSH/SSL hardcodeadas
      - id: check-case-conflict     # Problemas case-sensitive Linux/Windows
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      
      # 🧹 Limpieza de archivos
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: fix-byte-order-marker
      
      # 🔍 Validaciones Git
      - id: check-added-large-files
        args: ['--maxkb=500']  # Max 500KB por archivo
      - id: check-merge-conflict
      - id: check-vcs-permalinks
      
      # 🐛 Desarrollo
      - id: debug-statements
      - id: name-tests-test
        args: ['--django']

  # ======================================
  # 🎨 Formateo de código
  # ======================================
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # ======================================
  # 🔧 Linting
  # ======================================
  - repo: https://github.com/PyCQA/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203, W503]

  # ======================================
  # 📋 Imports
  # ======================================
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # ======================================
  # 🔐 SEGURIDAD AVANZADA VPS
  # ======================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: detect-secrets
        description: 'Detectar secretos hardcodeados (API keys, passwords, tokens)'
        entry: detect-secrets-hook
        language: python
        types: [text]
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
              \.secrets\.baseline|
              \.git/.*|
              backend/venv/.*|
              htmlcov/.*|
              reports/.*|
              .*\.log|
              .*\.pyc
          )$

  # ======================================
  # 🔍 VALIDACIÓN DE CONFIGURACIONES VPS
  # ======================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        name: yamllint
        description: 'Validar archivos YAML de configuración'
        args: [-c=.yamllint.yml]
        types: [yaml]
        exclude: |
          (?x)^(
              backend/venv/.*|
              htmlcov/.*|
              reports/.*
          )$

  # ======================================
  # 🧪 Tests automáticos
  # ======================================
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: python
        args: ["-m", "pytest", "backend/tests/", "-v", "--tb=short"]
        language: system
        types: [python]
        pass_filenames: false
        always_run: true

  # ======================================
  # 🔍 Checklist de Calidad Automatizado
  # ======================================
  - repo: local
    hooks:
      - id: quality-checklist
        name: quality-checklist
        entry: python
        args: ["backend/infrastructure/scripts/quick_quality.py"]
        language: system
        types: [python]
        pass_filenames: false
        always_run: true

  # ======================================
  # 📊 Análisis de Deuda Técnica
  # ======================================
  - repo: local
    hooks:
      - id: tech-debt-analysis
        name: tech-debt-analysis
        entry: python
        args:
          [
            "backend/infrastructure/scripts/tech_debt_analyzer.py",
            "--format",
            "console",
          ]
        language: system
        types: [python]
        pass_filenames: false
        always_run: true

# ======================================
# ⚙️ Configuración CI
# ======================================
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
